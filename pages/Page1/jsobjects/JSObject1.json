{
  "unpublishedCollection": {
    "name": "JSObject1",
    "pageId": "Page1",
    "pluginId": "js-plugin",
    "pluginType": "JS",
    "actions": [],
    "archivedActions": [],
    "body": "export default {\n\tmyVar1: [],\n\tmyVar2: {},\n\tmyFun1: () => {\n\t\tlet data = [];\n\t\tfor(let i=0;i<Api1.data.length;i++){\n\t\t\tif(Api1.data[i].REMARK == \"LIVE DATA\"){\n\t\t\t\tdata.unshift(Api1.data[i]);\n\t\t\t}else if(Api1.data[i].REMARK == \"INTERESTED\" || Api1.data[i].REMARK==\"SWITCH OFF/NOT REACHBLE\" || Api1.data[i].REMARK == \"CUSTOMER DISCONNECTING\"){\n\t\t\t\tdata.push(Api1.data[i])\n\t\t\t}else if(Api1.data[i].REMARK == \"OLD LEADS\"){\n\t\t\tdata.push(Api1.data[i]);\n\t\t}else if(\t(Api1.data[i].SCHEDULE_DATE)<=DATE_FORMAT.get_today_with_minutes())\n\t\t\t\t\t{\n\t\t\t\t\t\tdata.push(Api1.data[i]);\n\t\t\t\t\t}\n\t\t\t\tdata.sort((a,b)=>{\n\t\t\t\t\treturn new Date(b.SCHEDULE_DATE).getTime()  - new Date(a.SCHEDULE_DATE).getTime();\n\t\t\t\t});\n\t\t}\n\t\treturn data\n\t},\n\tReferral_Data :()=>{\n\t\tlet data =[];\n\t\tfor(let i=0;i<Referral.data.length;i++){\n\t\t\tif(Referral.data[i].REMARK != null){\n\t\t\t\tdata.push(Referral.data[i])\n\t\t\t}\n\t\t}\n\t\treturn data;\n\t},\n\tmyFun2: async () => {\n\t\t//use async-await or promises\n\t}\n}",
    "variables": [
      {
        "name": "myVar1",
        "value": "[]"
      },
      {
        "name": "myVar2",
        "value": "{}"
      }
    ],
    "userPermissions": []
  },
  "id": "Page1_JSObject1",
  "deleted": false,
  "gitSyncId": "63634e3ebaf07e59ff35088c_63a9735a647efb486b7705c7"
}