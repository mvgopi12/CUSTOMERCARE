{
  "pluginType": "JS",
  "pluginId": "js-plugin",
  "unpublishedAction": {
    "name": "Scheduled_Leads",
    "fullyQualifiedName": "S_LEADS.Scheduled_Leads",
    "datasource": {
      "name": "UNUSED_DATASOURCE",
      "pluginId": "js-plugin",
      "messages": [],
      "isAutoGenerated": false,
      "deleted": false,
      "policies": [],
      "userPermissions": []
    },
    "pageId": "Page1",
    "collectionId": "Page1_S_LEADS",
    "actionConfiguration": {
      "timeoutInMillisecond": 10000,
      "paginationType": "NONE",
      "encodeParamsToggle": true,
      "body": "() => {\n  let data = [];\n  for (let i = 0; i < L_CALLBACKS.data.length; i++) {\n    if (L_CALLBACKS.data[i].SCHEDULE_DATE <= DATE_FORMAT.get_today_with_minutes()) {\n      data.push(L_CALLBACKS.data[i]);\n    }\n  }\n  data.sort((a, b) => {\n    return new Date(b.SCHEDULE_DATE).getTime() - new Date(a.SCHEDULE_DATE).getTime();\n  });\n  return data;\n}",
      "selfReferencingDataPaths": [],
      "jsArguments": [],
      "isAsync": false
    },
    "executeOnLoad": false,
    "dynamicBindingPathList": [
      {
        "key": "body"
      }
    ],
    "isValid": true,
    "invalids": [],
    "messages": [],
    "jsonPathKeys": [
      "() => {\n  let data = [];\n  for (let i = 0; i < L_CALLBACKS.data.length; i++) {\n    if (L_CALLBACKS.data[i].SCHEDULE_DATE <= DATE_FORMAT.get_today_with_minutes()) {\n      data.push(L_CALLBACKS.data[i]);\n    }\n  }\n  data.sort((a, b) => {\n    return new Date(b.SCHEDULE_DATE).getTime() - new Date(a.SCHEDULE_DATE).getTime();\n  });\n  return data;\n}"
    ],
    "userSetOnLoad": false,
    "confirmBeforeExecute": false,
    "policies": [],
    "userPermissions": []
  },
  "id": "Page1_S_LEADS.Scheduled_Leads",
  "deleted": false,
  "gitSyncId": "63634e3ebaf07e59ff35088c_636354d6f30f9143c9f06530"
}